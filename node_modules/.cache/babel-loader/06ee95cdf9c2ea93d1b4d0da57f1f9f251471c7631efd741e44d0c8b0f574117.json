{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';\nexport const api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Интерцептор для обработки ошибок авторизации\napi.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    const isLoginPage = window.location.pathname === '/login';\n    if (!isLoginPage) {\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\nexport const productApi = {\n  getProducts: async (page = 1, perPage = 12, query = '', categoryId = null, brandId = null) => {\n    try {\n      let url = `/products?page=${page}&per_page=${perPage}`;\n      if (query) url += `&query=${encodeURIComponent(query)}`;\n      if (categoryId) url += `&category_id=${categoryId}`;\n      if (brandId) url += `&brand_id=${brandId}`;\n      const response = await api.get(url);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      throw error;\n    }\n  },\n  getProductDetail: async id => {\n    try {\n      const response = await api.get(`/products/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching product ${id}:`, error);\n      throw error;\n    }\n  }\n};\nexport const categoryApi = {\n  getCategories: async () => {\n    try {\n      const response = await api.get('/categories?per_page=100');\n      return response.data.items;\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n      throw error;\n    }\n  }\n};\nexport const brandApi = {\n  getBrands: async () => {\n    try {\n      const response = await api.get('/brands?per_page=100');\n      return response.data.items;\n    } catch (error) {\n      console.error('Error fetching brands:', error);\n      throw error;\n    }\n  }\n};\nexport const orderApi = {\n  getOrders: async (status = null) => {\n    try {\n      let url = '/orders/history';\n      if (status) url += `?status=${status}`;\n      const response = await api.get(url);\n      return response.data.items;\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n      throw error;\n    }\n  },\n  getOrderDetail: async id => {\n    try {\n      const response = await api.get(`/orders/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching order ${id}:`, error);\n      throw error;\n    }\n  },\n  createOrder: async orderData => {\n    try {\n      const response = await api.post('/orders', orderData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating order:', error);\n      throw error;\n    }\n  },\n  cancelOrder: async orderId => {\n    try {\n      const response = await api.post(`/orders/${orderId}/cancel`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error canceling order ${orderId}:`, error);\n      throw error;\n    }\n  }\n};\nexport { API_BASE_URL };","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","API_BASE_URL","REACT_APP_API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","removeItem","isLoginPage","window","location","pathname","href","productApi","getProducts","page","perPage","query","categoryId","brandId","url","encodeURIComponent","get","data","console","getProductDetail","id","categoryApi","getCategories","items","brandApi","getBrands","orderApi","getOrders","getOrderDetail","createOrder","orderData","post","cancelOrder","orderId"],"sources":["C:/Users/User/Desktop/Slice/Slice-client/src/api/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000';\r\n\r\nexport const api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Интерцептор для обработки ошибок авторизации\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response && error.response.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      \r\n      const isLoginPage = window.location.pathname === '/login';\r\n      if (!isLoginPage) {\r\n        window.location.href = '/login';\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const productApi = {\r\n  getProducts: async (page = 1, perPage = 12, query = '', categoryId = null, brandId = null) => {\r\n    try {\r\n      let url = `/products?page=${page}&per_page=${perPage}`;\r\n      \r\n      if (query) url += `&query=${encodeURIComponent(query)}`;\r\n      if (categoryId) url += `&category_id=${categoryId}`;\r\n      if (brandId) url += `&brand_id=${brandId}`;\r\n      \r\n      const response = await api.get(url);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getProductDetail: async (id) => {\r\n    try {\r\n      const response = await api.get(`/products/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error fetching product ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n};\r\n\r\nexport const categoryApi = {\r\n  getCategories: async () => {\r\n    try {\r\n      const response = await api.get('/categories?per_page=100');\r\n      return response.data.items;\r\n    } catch (error) {\r\n      console.error('Error fetching categories:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport const brandApi = {\r\n  getBrands: async () => {\r\n    try {\r\n      const response = await api.get('/brands?per_page=100');\r\n      return response.data.items;\r\n    } catch (error) {\r\n      console.error('Error fetching brands:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport const orderApi = {\r\n  getOrders: async (status = null) => {\r\n    try {\r\n      let url = '/orders/history';\r\n      if (status) url += `?status=${status}`;\r\n      \r\n      const response = await api.get(url);\r\n      return response.data.items;\r\n    } catch (error) {\r\n      console.error('Error fetching orders:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getOrderDetail: async (id) => {\r\n    try {\r\n      const response = await api.get(`/orders/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error fetching order ${id}:`, error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  createOrder: async (orderData) => {\r\n    try {\r\n      const response = await api.post('/orders', orderData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error creating order:', error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  cancelOrder: async (orderId) => {\r\n    try {\r\n      const response = await api.post(`/orders/${orderId}/cancel`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error canceling order ${orderId}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport { API_BASE_URL };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}