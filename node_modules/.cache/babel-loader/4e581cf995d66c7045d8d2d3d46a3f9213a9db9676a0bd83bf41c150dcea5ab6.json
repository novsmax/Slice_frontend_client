{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Slice\\\\Slice-client\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api } from '../api/api';\n\n// Создание контекста корзины\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Провайдер контекста корзины\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  var _cart$items;\n  const [cart, setCart] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Загрузка корзины\n  const fetchCart = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.get('/cart');\n      setCart(response.data);\n    } catch (err) {\n      console.error('Error fetching cart:', err);\n      setError('Не удалось загрузить корзину');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Загружаем корзину при инициализации\n  useEffect(() => {\n    // Проверяем, авторизован ли пользователь\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchCart();\n    }\n  }, []);\n\n  // Добавление товара в корзину\n  const addToCart = async (productId, quantity = 1) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.post('/cart/items', {\n        product_id: productId,\n        quantity: quantity\n      });\n\n      // Обновляем корзину\n      await fetchCart();\n      return response.data;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error adding to cart:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Не удалось добавить товар в корзину');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Обновление товара в корзине\n  const updateCartItem = async (itemId, quantity) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.put(`/cart/items/${itemId}`, {\n        quantity: quantity\n      });\n\n      // Обновляем корзину\n      await fetchCart();\n      return response.data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Error updating cart item:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.detail) || 'Не удалось обновить товар в корзине');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Удаление товара из корзины\n  const removeFromCart = async itemId => {\n    try {\n      setLoading(true);\n      setError(null);\n      await api.delete(`/cart/items/${itemId}`);\n\n      // Обновляем корзину\n      await fetchCart();\n      return true;\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error('Error removing from cart:', err);\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.detail) || 'Не удалось удалить товар из корзины');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Очистка корзины\n  const clearCart = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      await api.delete('/cart');\n\n      // Обновляем корзину\n      await fetchCart();\n      return true;\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      console.error('Error clearing cart:', err);\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.detail) || 'Не удалось очистить корзину');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Оформление заказа\n  const checkout = async orderData => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.post('/orders', orderData);\n\n      // Обновляем корзину\n      await fetchCart();\n      return response.data;\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      console.error('Error checking out:', err);\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.detail) || 'Не удалось оформить заказ');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Общее количество товаров в корзине\n  const cartItemsCount = (cart === null || cart === void 0 ? void 0 : (_cart$items = cart.items) === null || _cart$items === void 0 ? void 0 : _cart$items.reduce((total, item) => total + item.quantity, 0)) || 0;\n\n  // Экспортируем значения и функции\n  const value = {\n    cart,\n    loading,\n    error,\n    cartItemsCount,\n    fetchCart,\n    addToCart,\n    updateCartItem,\n    removeFromCart,\n    clearCart,\n    checkout\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 10\n  }, this);\n};\n\n// Хук для использования контекста корзины\n_s(CartProvider, \"nUxnAUORIFOxJOsdPIumZGw7LXI=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart должен использоваться внутри CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","_cart$items","cart","setCart","loading","setLoading","error","setError","fetchCart","response","get","data","err","console","token","localStorage","getItem","addToCart","productId","quantity","post","product_id","_err$response","_err$response$data","detail","updateCartItem","itemId","put","_err$response2","_err$response2$data","removeFromCart","delete","_err$response3","_err$response3$data","clearCart","_err$response4","_err$response4$data","checkout","orderData","_err$response5","_err$response5$data","cartItemsCount","items","reduce","total","item","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Slice/Slice-client/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { api } from '../api/api';\r\n\r\n// Создание контекста корзины\r\nconst CartContext = createContext();\r\n\r\n// Провайдер контекста корзины\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Загрузка корзины\r\n  const fetchCart = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await api.get('/cart');\r\n      setCart(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching cart:', err);\r\n      setError('Не удалось загрузить корзину');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Загружаем корзину при инициализации\r\n  useEffect(() => {\r\n    // Проверяем, авторизован ли пользователь\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      fetchCart();\r\n    }\r\n  }, []);\r\n\r\n  // Добавление товара в корзину\r\n  const addToCart = async (productId, quantity = 1) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await api.post('/cart/items', {\r\n        product_id: productId,\r\n        quantity: quantity\r\n      });\r\n      \r\n      // Обновляем корзину\r\n      await fetchCart();\r\n      \r\n      return response.data;\r\n    } catch (err) {\r\n      console.error('Error adding to cart:', err);\r\n      setError(err.response?.data?.detail || 'Не удалось добавить товар в корзину');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Обновление товара в корзине\r\n  const updateCartItem = async (itemId, quantity) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await api.put(`/cart/items/${itemId}`, {\r\n        quantity: quantity\r\n      });\r\n      \r\n      // Обновляем корзину\r\n      await fetchCart();\r\n      \r\n      return response.data;\r\n    } catch (err) {\r\n      console.error('Error updating cart item:', err);\r\n      setError(err.response?.data?.detail || 'Не удалось обновить товар в корзине');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Удаление товара из корзины\r\n  const removeFromCart = async (itemId) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      await api.delete(`/cart/items/${itemId}`);\r\n      \r\n      // Обновляем корзину\r\n      await fetchCart();\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      console.error('Error removing from cart:', err);\r\n      setError(err.response?.data?.detail || 'Не удалось удалить товар из корзины');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Очистка корзины\r\n  const clearCart = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      await api.delete('/cart');\r\n      \r\n      // Обновляем корзину\r\n      await fetchCart();\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      console.error('Error clearing cart:', err);\r\n      setError(err.response?.data?.detail || 'Не удалось очистить корзину');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Оформление заказа\r\n  const checkout = async (orderData) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await api.post('/orders', orderData);\r\n      \r\n      // Обновляем корзину\r\n      await fetchCart();\r\n      \r\n      return response.data;\r\n    } catch (err) {\r\n      console.error('Error checking out:', err);\r\n      setError(err.response?.data?.detail || 'Не удалось оформить заказ');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Общее количество товаров в корзине\r\n  const cartItemsCount = cart?.items?.reduce((total, item) => total + item.quantity, 0) || 0;\r\n\r\n  // Экспортируем значения и функции\r\n  const value = {\r\n    cart,\r\n    loading,\r\n    error,\r\n    cartItemsCount,\r\n    fetchCart,\r\n    addToCart,\r\n    updateCartItem,\r\n    removeFromCart,\r\n    clearCart,\r\n    checkout\r\n  };\r\n\r\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n};\r\n\r\n// Хук для использования контекста корзины\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart должен использоваться внутри CartProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}